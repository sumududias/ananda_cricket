# Generated by Django 5.2 on 2025-05-17 21:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MatchFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=10, unique=True)),
                ('days', models.PositiveSmallIntegerField(help_text='Number of days for the match')),
                ('is_limited_overs', models.BooleanField(default=False)),
                ('is_practice', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('season', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('organizer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('dob', models.DateField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='player_photos/')),
                ('jersey_number', models.IntegerField(blank=True, db_column='player_jersey_number', help_text="Player's jersey number", null=True)),
                ('batting_style', models.CharField(choices=[('R', 'Right-handed'), ('L', 'Left-handed')], max_length=20)),
                ('bowling_style', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_role', models.CharField(choices=[('BAT', 'Batsman'), ('BOWL', 'Bowler'), ('AR', 'All-Rounder'), ('WK', 'Wicket Keeper')], max_length=4)),
                ('player_class', models.CharField(max_length=20)),
                ('year_joined', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(default='Ananda College', max_length=100)),
                ('opponent', models.CharField(max_length=100)),
                ('match_date', models.DateField()),
                ('venue', models.CharField(blank=True, max_length=100, null=True)),
                ('toss_winner', models.CharField(blank=True, max_length=100, null=True)),
                ('toss_decision', models.CharField(blank=True, max_length=10, null=True)),
                ('result', models.CharField(blank=True, max_length=200, null=True)),
                ('ananda_extras_byes', models.IntegerField(default=0)),
                ('ananda_extras_leg_byes', models.IntegerField(default=0)),
                ('opponent_extras_byes', models.IntegerField(default=0)),
                ('opponent_extras_leg_byes', models.IntegerField(default=0)),
                ('match_type', models.CharField(default='League', max_length=20)),
                ('first_innings_total', models.IntegerField(default=0)),
                ('second_innings_total', models.IntegerField(default=0)),
                ('opponent_first_innings', models.IntegerField(default=0)),
                ('opponent_second_innings', models.IntegerField(default=0)),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='matches', to='cricket_stats.matchformat')),
                ('man_of_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='man_of_match_matches', to='cricket_stats.player')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cricket_stats.tournament')),
            ],
            options={
                'verbose_name_plural': 'Matches',
                'ordering': ['-match_date'],
            },
        ),
        migrations.CreateModel(
            name='Substitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('INJURY', 'Injury'), ('TACTICAL', 'Tactical'), ('OTHER', 'Other')], max_length=20)),
                ('substitution_time', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, default='')),
                ('approved_by', models.CharField(blank=True, default='', max_length=100)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.match')),
                ('player_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substituted_in', to='cricket_stats.player')),
                ('player_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substituted_out', to='cricket_stats.player')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('season', models.CharField(max_length=20)),
                ('coach', models.CharField(max_length=100)),
                ('captain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='captain_of', to='cricket_stats.player')),
            ],
        ),
        migrations.CreateModel(
            name='TeamStanding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches_played', models.IntegerField(default=0)),
                ('matches_won', models.IntegerField(default=0)),
                ('matches_lost', models.IntegerField(default=0)),
                ('matches_drawn', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('net_run_rate', models.FloatField(default=0.0)),
                ('position', models.IntegerField()),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='MatchPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innings_number', models.IntegerField(default=1)),
                ('batting_order', models.IntegerField(blank=True, null=True)),
                ('runs_scored', models.IntegerField(blank=True, null=True)),
                ('balls_faced', models.IntegerField(blank=True, null=True)),
                ('fours', models.IntegerField(blank=True, null=True)),
                ('sixes', models.IntegerField(blank=True, null=True)),
                ('how_out', models.CharField(blank=True, max_length=100, null=True)),
                ('overs_bowled', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('maidens', models.IntegerField(blank=True, null=True)),
                ('runs_conceded', models.IntegerField(blank=True, null=True)),
                ('wickets_taken', models.IntegerField(blank=True, null=True)),
                ('wide_balls', models.IntegerField(blank=True, null=True)),
                ('no_balls', models.IntegerField(blank=True, null=True)),
                ('catches', models.IntegerField(blank=True, null=True)),
                ('missed_catches', models.IntegerField(default=0, help_text='Number of catches dropped')),
                ('stumpings', models.IntegerField(blank=True, null=True)),
                ('runouts', models.IntegerField(blank=True, null=True)),
                ('is_playing_xi', models.BooleanField(default=True)),
                ('is_substitute', models.BooleanField(default=False)),
                ('selection_notes', models.TextField(blank=True, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=100, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.player')),
            ],
            options={
                'unique_together': {('match', 'player', 'innings_number')},
            },
        ),
        migrations.CreateModel(
            name='BowlingInnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innings_number', models.IntegerField(default=1)),
                ('overs', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('maidens', models.IntegerField(default=0)),
                ('runs_conceded', models.IntegerField(default=0)),
                ('wickets', models.IntegerField(default=0)),
                ('wides', models.IntegerField(default=0)),
                ('no_balls', models.IntegerField(default=0)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.player')),
            ],
            options={
                'ordering': ['innings_number'],
                'unique_together': {('match', 'player', 'innings_number')},
            },
        ),
        migrations.CreateModel(
            name='BattingInnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innings_number', models.IntegerField(default=1)),
                ('batting_position', models.IntegerField()),
                ('runs_scored', models.IntegerField(default=0)),
                ('balls_faced', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('how_out', models.CharField(blank=True, max_length=100, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.match')),
                ('bowler', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wickets_taken_set', to='cricket_stats.player')),
                ('fielder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catches_taken_set', to='cricket_stats.player')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket_stats.player')),
            ],
            options={
                'ordering': ['innings_number', 'batting_position'],
                'unique_together': {('match', 'player', 'innings_number')},
            },
        ),
    ]
